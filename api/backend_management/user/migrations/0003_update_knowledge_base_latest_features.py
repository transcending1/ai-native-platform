# Generated by Django 5.2.4 on 2025-07-20 11:18

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("user", "0002_knowledgebase_document"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="document",
            options={
                "ordering": ["position", "-updated_time"],
                "verbose_name": "文档",
                "verbose_name_plural": "文档",
            },
        ),
        migrations.AddField(
            model_name="document",
            name="is_published",
            field=models.BooleanField(default=False, verbose_name="是否已发布"),
        ),
        migrations.AddField(
            model_name="document",
            name="position",
            field=models.IntegerField(default=0, verbose_name="位置排序"),
        ),
        migrations.AddField(
            model_name="document",
            name="published_at",
            field=models.DateTimeField(blank=True, null=True, verbose_name="发布时间"),
        ),
        migrations.AddField(
            model_name="knowledgebase",
            name="auto_publish",
            field=models.BooleanField(
                default=False,
                help_text="文档保存时自动发布到阅读页",
                verbose_name="开启自动发布",
            ),
        ),
        migrations.AddField(
            model_name="knowledgebase",
            name="cover_image",
            field=models.URLField(
                blank=True,
                help_text="知识库封面图片URL（存储在腾讯云）",
                null=True,
                verbose_name="封面图片",
            ),
        ),
        migrations.AddField(
            model_name="knowledgebase",
            name="doc_create_position",
            field=models.CharField(
                choices=[("top", "顶部"), ("bottom", "底部")],
                default="top",
                help_text="新建文档在层级中的位置",
                max_length=20,
                verbose_name="文档新建位置",
            ),
        ),
        migrations.AddField(
            model_name="knowledgebase",
            name="doc_width",
            field=models.CharField(
                choices=[("standard", "标准页宽"), ("wide", "超宽显示")],
                default="standard",
                help_text="文档展示宽度设置",
                max_length=20,
                verbose_name="文档展示宽度",
            ),
        ),
        migrations.AddField(
            model_name="knowledgebase",
            name="enable_comments",
            field=models.BooleanField(
                default=True, help_text="是否允许用户评论", verbose_name="开启评论功能"
            ),
        ),
        migrations.AddField(
            model_name="knowledgebase",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="知识库的创建者",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="owned_knowledge_bases",
                to="user.user",
                verbose_name="拥有者",
            ),
        ),
        migrations.CreateModel(
            name="KnowledgeBaseCollaborator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "permission",
                    models.CharField(
                        choices=[("read", "可阅读"), ("edit", "可编辑")],
                        default="read",
                        help_text="协作者的权限级别",
                        max_length=10,
                        verbose_name="权限",
                    ),
                ),
                (
                    "invite_token",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="用于生成邀请链接的唯一令牌",
                        unique=True,
                        verbose_name="邀请令牌",
                    ),
                ),
                (
                    "invite_url",
                    models.URLField(
                        blank=True,
                        help_text="协作者邀请链接",
                        null=True,
                        verbose_name="邀请链接",
                    ),
                ),
                (
                    "invited_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="邀请时间"),
                ),
                (
                    "accepted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="接受邀请时间"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否激活"),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "knowledge_base",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collaborators",
                        to="user.knowledgebase",
                        verbose_name="知识库",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collaborated_knowledge_bases",
                        to="user.user",
                        verbose_name="协作者",
                    ),
                ),
            ],
            options={
                "verbose_name": "知识库协作者",
                "verbose_name_plural": "知识库协作者",
                "db_table": "knowledge_base_collaborator",
                "ordering": ["-created_time"],
                "unique_together": {("knowledge_base", "user")},
            },
        ),
    ]
