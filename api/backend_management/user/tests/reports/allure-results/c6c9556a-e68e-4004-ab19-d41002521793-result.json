{"name": "test_user_register", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = exists()\n +    where exists = <QuerySet []>.exists\n +      where <QuerySet []> = filter(username='newuser')\n +        where filter = <django.contrib.auth.models.UserManager object at 0x11037b350>.filter\n +          where <django.contrib.auth.models.UserManager object at 0x11037b350> = User.objects", "trace": "self = <user.tests.test_user.TestUserAuthentication object at 0x1108947d0>\n\n    @allure.step(\"测试用户注册\")\n    def test_user_register(self):\n        \"\"\"\n        测试用户注册\n        \"\"\"\n        url = f'{BASE_URL}/user/register/'\n        data = {\n            'username': 'newuser',\n            'password': 'newpass123',\n            'password_confirm': 'newpass123',\n            'email': 'newuser@example.com',\n            'phone': '13800138000'\n        }\n    \n        response = requests.post(url, json=data)\n        response_data = response.json()\n    \n        assert response.status_code == 201\n        assert response_data['code'] == 201\n        assert response_data['message'] == '注册成功'\n        assert 'data' in response_data\n        assert response_data['data']['username'] == 'newuser'\n    \n        # 验证返回的字段不包含 first_name 和 last_name\n        assert 'first_name' not in response_data['data']\n        assert 'last_name' not in response_data['data']\n    \n        # 验证用户确实被创建\n>       assert User.objects.filter(username='newuser').exists()\nE       AssertionError: assert False\nE        +  where False = exists()\nE        +    where exists = <QuerySet []>.exists\nE        +      where <QuerySet []> = filter(username='newuser')\nE        +        where filter = <django.contrib.auth.models.UserManager object at 0x11037b350>.filter\nE        +          where <django.contrib.auth.models.UserManager object at 0x11037b350> = User.objects\n\ntest_user.py:350: AssertionError"}, "description": "\n        测试用户注册\n        ", "steps": [{"name": "测试用户注册", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = exists()\n +    where exists = <QuerySet []>.exists\n +      where <QuerySet []> = filter(username='newuser')\n +        where filter = <django.contrib.auth.models.UserManager object at 0x11037b350>.filter\n +          where <django.contrib.auth.models.UserManager object at 0x11037b350> = User.objects\n", "trace": "  File \"/opt/anaconda3/envs/ai-native-kernel/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/zongjunyi/PycharmProjects/ai-native-platform/api/backend_management/user/tests/test_user.py\", line 350, in test_user_register\n    assert User.objects.filter(username='newuser').exists()\n"}, "start": 1753703029038, "stop": 1753703029539}], "start": 1753703029038, "stop": 1753703029540, "uuid": "662528f3-dde6-45b3-a847-c601acac0f8d", "historyId": "7a6c4b2459a88ed7af5abaf2a84bf44a", "testCaseId": "7a6c4b2459a88ed7af5abaf2a84bf44a", "fullName": "user.tests.test_user.TestUserAuthentication#test_user_register", "labels": [{"name": "feature", "value": "用户认证"}, {"name": "story", "value": "用户登录"}, {"name": "tag", "value": "django_db"}, {"name": "parentSuite", "value": "user.tests"}, {"name": "suite", "value": "test_user"}, {"name": "subSuite", "value": "TestUserAuthentication"}, {"name": "host", "value": "zongjunyi.local"}, {"name": "thread", "value": "12884-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "user.tests.test_user"}]}